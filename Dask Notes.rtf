{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Outline for DASK\
\
1. Delayed\
	-Used for off the cuff fxs, no need to use a data frame\
2. Dataframes\
	-Parallelizes computation in an efficient pandas like object\
3. Schedulers\
	-GIL - python locks down parallelism\
	-Distributed Scheduler - can automatically create a cluster with Client() (must import\
		-threaded vs distributed scheduler\
		-visualize in real time with {\field{\*\fldinst{HYPERLINK "http://localhost:8787/status"}}{\fldrslt http://localhost:8787/status}}\
	-Can set up clusters manually. Use dask-scheduler\
		-grab the address at \'91Scheduler at: \'91\
		-use dask-worker \'91tcp address\'92\
4. Dask.array\
	-Mirrors numpy instead of pandas.\
	-dask.bag - general paralleizable collection, any python object can exist in it. Works like pyspark RDD\
\
Machine Learning - in the notebook\
	Caveats: lots of sklearn can\'92t be overridden for dark. Only efficient for really high computation.  \
\
SPARK vs DASK\
\
1. }